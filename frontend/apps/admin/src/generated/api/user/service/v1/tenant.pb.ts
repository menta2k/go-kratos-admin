// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               unknown
// source: user/service/v1/tenant.proto

/* eslint-disable */
import type { Empty } from "../../../google/protobuf/empty.pb";
import type { Timestamp } from "../../../google/protobuf/timestamp.pb";
import type { PagingRequest } from "../../../pagination/v1/pagination.pb";

/** 租户 */
export interface Tenant {
  /** 租户ID */
  id?:
    | number
    | null
    | undefined;
  /** 租户名称 */
  name?:
    | string
    | null
    | undefined;
  /** 租户编码 */
  code?:
    | string
    | null
    | undefined;
  /** 成员数量 */
  memberCount?: number | null | undefined;
  status?:
    | string
    | null
    | undefined;
  /** 备注 */
  remark?: string | null | undefined;
  subscriptionAt?: Timestamp | null | undefined;
  unsubscribeAt?:
    | Timestamp
    | null
    | undefined;
  /** 创建者ID */
  createBy?:
    | number
    | null
    | undefined;
  /** 更新者ID */
  updateBy?:
    | number
    | null
    | undefined;
  /** 创建时间 */
  createTime?:
    | Timestamp
    | null
    | undefined;
  /** 更新时间 */
  updateTime?:
    | Timestamp
    | null
    | undefined;
  /** 删除时间 */
  deleteTime?: Timestamp | null | undefined;
}

/** 租户列表 - 答复 */
export interface ListTenantResponse {
  items: Tenant[];
  total: number;
}

/** 租户数据 - 请求 */
export interface GetTenantRequest {
  id: number;
}

/** 创建租户 - 请求 */
export interface CreateTenantRequest {
  data: Tenant | null;
}

/** 更新租户 -请求 */
export interface UpdateTenantRequest {
  data:
    | Tenant
    | null;
  /** 要更新的字段列表 */
  updateMask:
    | string[]
    | null;
  /** 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。 */
  allowMissing?: boolean | null | undefined;
}

/** 删除租户 - 请求 */
export interface DeleteTenantRequest {
  id: number;
}

export interface BatchCreateTenantsRequest {
  data: Tenant[];
}

export interface BatchCreateTenantsResponse {
  data: Tenant[];
}

/** 租户服务 */
export interface TenantService {
  /** 查询租户列表 */
  List(request: PagingRequest): Promise<ListTenantResponse>;
  /** 查询租户详情 */
  Get(request: GetTenantRequest): Promise<Tenant>;
  /** 创建租户 */
  Create(request: CreateTenantRequest): Promise<Empty>;
  /** 更新租户 */
  Update(request: UpdateTenantRequest): Promise<Empty>;
  /** 删除租户 */
  Delete(request: DeleteTenantRequest): Promise<Empty>;
  /** 批量创建租户 */
  BatchCreate(request: BatchCreateTenantsRequest): Promise<BatchCreateTenantsResponse>;
}
