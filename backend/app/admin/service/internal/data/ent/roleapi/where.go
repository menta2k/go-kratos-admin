// Code generated by ent, DO NOT EDIT.

package roleapi

import (
	"kratos-admin/app/admin/service/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldDeleteTime, v))
}

// CreateBy applies equality check predicate on the "create_by" field. It's identical to CreateByEQ.
func CreateBy(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldCreateBy, v))
}

// RoleID applies equality check predicate on the "role_id" field. It's identical to RoleIDEQ.
func RoleID(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldRoleID, v))
}

// APIID applies equality check predicate on the "api_id" field. It's identical to APIIDEQ.
func APIID(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldAPIID, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "create_time" field.
func CreateTimeIsNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "create_time" field.
func CreateTimeNotNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotNull(FieldCreateTime))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldUpdateTime, v))
}

// UpdateTimeIsNil applies the IsNil predicate on the "update_time" field.
func UpdateTimeIsNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIsNull(FieldUpdateTime))
}

// UpdateTimeNotNil applies the NotNil predicate on the "update_time" field.
func UpdateTimeNotNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotNull(FieldUpdateTime))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotNull(FieldDeleteTime))
}

// CreateByEQ applies the EQ predicate on the "create_by" field.
func CreateByEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldCreateBy, v))
}

// CreateByNEQ applies the NEQ predicate on the "create_by" field.
func CreateByNEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldCreateBy, v))
}

// CreateByIn applies the In predicate on the "create_by" field.
func CreateByIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldCreateBy, vs...))
}

// CreateByNotIn applies the NotIn predicate on the "create_by" field.
func CreateByNotIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldCreateBy, vs...))
}

// CreateByGT applies the GT predicate on the "create_by" field.
func CreateByGT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldCreateBy, v))
}

// CreateByGTE applies the GTE predicate on the "create_by" field.
func CreateByGTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldCreateBy, v))
}

// CreateByLT applies the LT predicate on the "create_by" field.
func CreateByLT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldCreateBy, v))
}

// CreateByLTE applies the LTE predicate on the "create_by" field.
func CreateByLTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldCreateBy, v))
}

// CreateByIsNil applies the IsNil predicate on the "create_by" field.
func CreateByIsNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIsNull(FieldCreateBy))
}

// CreateByNotNil applies the NotNil predicate on the "create_by" field.
func CreateByNotNil() predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotNull(FieldCreateBy))
}

// RoleIDEQ applies the EQ predicate on the "role_id" field.
func RoleIDEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldRoleID, v))
}

// RoleIDNEQ applies the NEQ predicate on the "role_id" field.
func RoleIDNEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldRoleID, v))
}

// RoleIDIn applies the In predicate on the "role_id" field.
func RoleIDIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldRoleID, vs...))
}

// RoleIDNotIn applies the NotIn predicate on the "role_id" field.
func RoleIDNotIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldRoleID, vs...))
}

// RoleIDGT applies the GT predicate on the "role_id" field.
func RoleIDGT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldRoleID, v))
}

// RoleIDGTE applies the GTE predicate on the "role_id" field.
func RoleIDGTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldRoleID, v))
}

// RoleIDLT applies the LT predicate on the "role_id" field.
func RoleIDLT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldRoleID, v))
}

// RoleIDLTE applies the LTE predicate on the "role_id" field.
func RoleIDLTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldRoleID, v))
}

// APIIDEQ applies the EQ predicate on the "api_id" field.
func APIIDEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldEQ(FieldAPIID, v))
}

// APIIDNEQ applies the NEQ predicate on the "api_id" field.
func APIIDNEQ(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNEQ(FieldAPIID, v))
}

// APIIDIn applies the In predicate on the "api_id" field.
func APIIDIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldIn(FieldAPIID, vs...))
}

// APIIDNotIn applies the NotIn predicate on the "api_id" field.
func APIIDNotIn(vs ...uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldNotIn(FieldAPIID, vs...))
}

// APIIDGT applies the GT predicate on the "api_id" field.
func APIIDGT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGT(FieldAPIID, v))
}

// APIIDGTE applies the GTE predicate on the "api_id" field.
func APIIDGTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldGTE(FieldAPIID, v))
}

// APIIDLT applies the LT predicate on the "api_id" field.
func APIIDLT(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLT(FieldAPIID, v))
}

// APIIDLTE applies the LTE predicate on the "api_id" field.
func APIIDLTE(v uint32) predicate.RoleApi {
	return predicate.RoleApi(sql.FieldLTE(FieldAPIID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RoleApi) predicate.RoleApi {
	return predicate.RoleApi(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RoleApi) predicate.RoleApi {
	return predicate.RoleApi(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RoleApi) predicate.RoleApi {
	return predicate.RoleApi(sql.NotPredicates(p))
}
